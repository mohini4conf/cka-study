Steps to install kube on master
Documentation Links:
To install kubeadm:https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
To install containerd runtime: https://docs.docker.com/engine/install/ubuntu/
Post Changes for container runtime: https://kubernetes.io/docs/setup/production-environment/container-runtimes/

1] Check if available RAM & cpu is greater than 2.
free -g ( available <~ free + buffer-cache )
lscpu
2] Check if below ports are available . If port is free , then no output will be displayed.
If port is occupied it may display process name and then you need to do Cntr + c to get out of the
prompt.
	nc 127.0.0.1 6443 #Kubernetes API server on master
	nc 127.0.0.1 2379 #etcd server client API on master
	nc 127.0.0.1 2380 #etcd server client API
	nc 127.0.0.1 10250 #Kubelet API on master
	nc 127.0.0.1 10250 #Kubelet API on worker
	nc 127.0.0.1 10259 #kube-scheduler on master
	nc 127.0.0.1 10257 #kube-controller-manager
3] Install containerd
sudo apt-get update
sudo apt-get install \
	ca-certificates \
	curl \
	gnupg \
    	lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install containerd.io
4] Remove disabled plugins /etc/containerd/config.toml and restart containerd
5] Disable swap. Swap memory comes into use once RAM is used up . Operations in swap are slow.
May be because of that kubernetes developer thought not to support swap memory.
Disable line containing swap in /etc/fstab
sudo swapoff -a
6] [Optional] To enable root password & set hostname to master
update PermitRootLogin to yes in /etc/sshd_config
hostnamectl set-hostname master
7] Install kube binaries
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update -y
sudo apt-get install -y kubelet=1.19.1-00 kubeadm=1.19.1-00 kubectl=1.19.1-00
8] Post changes for container runtime
br_netfilter module is required for intercontainer networking
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system
8] Initialize k8s cluster
kubeadm init --apiserver-advertise-address 10.0.2.10 --pod-network-cidr=192.168.0.0/16
9] Prerequisite to install network plugin
Make net.ipv4.conf.all.rp_filter filter to 1
/etc/sysctl.d/10-network-security.conf
10] Remove taints from all nodes
kubectl taint nodes --all node-role.kubernetes.io/master-
11] Install calico network plugin
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml

